/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var grass = /* color: #fcff29 */ee.Feature(
        ee.Geometry.Polygon(
            [[[-87.89614692241388, 43.025922720733824],
              [-87.89620123714643, 43.02596046642376],
              [-87.89627566844659, 43.0259393876647],
              [-87.89641916662889, 43.02590213216589],
              [-87.8961509457274, 43.02591438726668]]]),
        {
          "class_2010": 0,
          "system:index": "0"
        }),
    impervious = /* color: #be1414 */ee.Feature(
        ee.Geometry.Polygon(
            [[[-87.89641112000184, 43.02589870073722],
              [-87.89640843779283, 43.025871249301034],
              [-87.89613418192106, 43.02588301420375],
              [-87.89614424020486, 43.025912916654704]]]),
        {
          "class_2010": 1,
          "system:index": "0"
        }),
    soil = /* color: #d2a525 */ee.Feature(
        ee.Geometry.MultiPolygon(
            [[[[-87.90174382092083, 43.027271365549005],
               [-87.90173175098026, 43.02709391537346],
               [-87.90155338408077, 43.02708607225996],
               [-87.9015775239619, 43.02727626748026]]],
             [[[-87.93418085650494, 42.970964073943],
               [-87.934101731339, 42.97094739209354],
               [-87.93409368471195, 42.97087477693139],
               [-87.93392336443951, 42.97087870207748],
               [-87.93394482211163, 42.97096505522812],
               [-87.93400383070995, 42.97102491359095],
               [-87.93407222703983, 42.971070052645715]]],
             [[[-87.93426599879092, 42.97087364952897],
               [-87.93429885585135, 42.97087659338864],
               [-87.93431964297122, 42.9708520612206],
               [-87.9343156196577, 42.97082507582448],
               [-87.93425996382064, 42.97082851033009],
               [-87.93424588222331, 42.97085107993368]]],
             [[[-87.93196852123236, 42.97137366723718],
               [-87.93196315681433, 42.97129712745914],
               [-87.93185452734923, 42.971278483139834],
               [-87.93185050403571, 42.971339322476794]]]]),
        {
          "class_2010": 2,
          "system:index": "0"
        }),
    tree = /* color: #15c232 */ee.Feature(
        ee.Geometry.MultiPolygon(
            [[[[-87.89903440560481, 43.02690538052191],
               [-87.89903440560481, 43.026846556965424],
               [-87.89897271479747, 43.026833811854104],
               [-87.89893516387126, 43.02685047853761],
               [-87.89894052828929, 43.02690145895323],
               [-87.89898478473803, 43.026918125618394]]],
             [[[-87.89832630242488, 43.026673027145364],
               [-87.89837055887362, 43.026673027145364],
               [-87.89838933433673, 43.02670538019986],
               [-87.89844834293505, 43.02669557624575],
               [-87.89847784723422, 43.02663871328105],
               [-87.89842688526294, 43.02658086986637],
               [-87.89832362021586, 43.02658086986637],
               [-87.89830350364825, 43.026613222969445],
               [-87.89827265824458, 43.02664851724424]]]]),
        {
          "class_2010": 3,
          "system:index": "0"
        }),
    water = /* color: #3049c2 */ee.Feature(
        ee.Geometry.Polygon(
            [[[-87.89603875921945, 43.02577634122819],
              [-87.89605082916002, 43.02587536257554],
              [-87.89640622185449, 43.02585967603612]]]),
        {
          "class_2010": 4,
          "system:index": "0"
        });
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var milwaukeeExport = ee.Geometry.Polygon(
        [[[-88.35575750089527, 43.35209206347098],
          [-88.35575750089527, 42.80743795582355],
          [-87.76249578214527, 42.80743795582355],
          [-87.76249578214527, 43.35209206347098]]], null, false),
    wb = ee.Image("users/erker/milwaukee/milwaukee_water/mke_water_bodies_26916_input"),
    wl = ee.Image("users/erker/milwaukee/milwaukee_water/mke_water_lines_26916_input"),
    height = ee.Image("users/erker/milwaukee/milwaukee_height/mke_2010height");

var pts = ee.FeatureCollection('users/erker/milwaukee/milwaukee_shapefiles/milwaukee_accuracy_training');
Map.addLayer(pts);

var classProperty = 'class_2010';

var pts = pts.remap(['G','I','S','T','W'], [0,1,2,3,4], classProperty);

var trainingData = pts.merge(grass).merge(tree).merge(soil).merge(impervious).merge(water);

var testpts = ee.FeatureCollection('users/erker/milwaukee/milwaukee_shapefiles/milwaukee_accuracy_testing').filter(ee.Filter.neq(classProperty, '')).remap(['G','I','S','T','W'], [0,1,2,3,4], classProperty);
// var testpts = testpts.randomColumn();
// testpts =  testpts.filter(ee.Filter.lt('random', 0.01));
// print(testpts.size());



var buf3000 = function(feature) {return feature.buffer(3000)};
var urbanregion = testpts.map(buf3000);
var naip = ee.ImageCollection('USDA/NAIP/DOQQ').filterBounds(urbanregion); 
var naip05c = naip.filterDate('2005-01-01', '2005-12-31');
var naip08c = naip.filterDate('2008-01-01', '2008-12-31');
var naip10c = naip.filterDate('2010-01-01', '2010-12-31');




var naip05 = naip05c.median().byte();
var naip08 = naip08c.median().byte();
var naip10 = naip10c.median().byte();



var ndvi10 = naip10.normalizedDifference(['N', 'R']);
var gauss53 = ee.Kernel.gaussian({radius: 5, sigma: 3, units: 'pixels', normalize:true});
var naip10Gauss53 = naip10.convolve(gauss53);
var naip08Gauss53 = naip08.convolve(gauss53);
var gauss104 = ee.Kernel.gaussian({radius: 10, sigma: 4, units: 'pixels', normalize:true});
var naip10Gauss104 = naip10.convolve(gauss104);
var naip08Gauss104 = naip08.convolve(gauss104);
var win10 = ee.Kernel.square({radius: 10});
var entro10 = naip10.select('N').entropy(win10);
var win5 = ee.Kernel.square({radius: 5});
var entro5 = naip10.select('N').entropy(win5);
var nir10glcm3 = naip10.select(['N']).glcmTexture({size: 3, average: false});
var contrast3 = nir10glcm3.select('N_contrast_-1_-1', 'N_contrast_0_-1', 'N_contrast_1_-1', 'N_contrast_-1_0');
var nir10glcm7 = naip10.select(['N']).glcmTexture({size: 7, average: false});
var contrast7 = nir10glcm7.select('N_contrast_-1_-1', 'N_contrast_0_-1', 'N_contrast_1_-1', 'N_contrast_-1_0');
var nir10glcm14 = naip10.select(['N']).glcmTexture({size: 14, average: false});
var contrast14 = nir10glcm14.select('N_contrast_-1_-1', 'N_contrast_0_-1', 'N_contrast_1_-1', 'N_contrast_-1_0');

var image = ee.Image.cat([naip05, naip08, naip10, ndvi10, naip10Gauss53, naip10Gauss104, naip08Gauss104, entro10, entro5, contrast3, contrast7, contrast14, wl, wb, height]);
var image = ee.Image.cat([naip10, ndvi10, wl, wb, height]);

print(image);

var training = image.sampleRegions({
  collection: trainingData,
  properties: [classProperty],
  scale: 1
});
// print(training.size());

// training = training.randomColumn();

// var split = 0.1;
// var training = training.filter(ee.Filter.lt('random', split));
// print(training.size());


var trainedClassifier = ee.Classifier.smileRandomForest(1).train({
  features: training,
  classProperty: classProperty,
  inputProperties: image.bandNames()
});

// print(trainedClassifier);

var testing = image.sampleRegions({collection: testpts, properties: [classProperty], scale: 1});
var testClassified = testing.classify(trainedClassifier);
var testAccuracy = testClassified.errorMatrix(classProperty, 'classification');
print('Validation error matrix: ', testAccuracy);
print('Validation overall accuracy: ', testAccuracy.accuracy());


var classified = image.classify(trainedClassifier);



Map.addLayer(naip05);
Map.addLayer(naip08);
Map.addLayer(naip10);
Map.addLayer(classified, {min: 0, max: 4, palette: ['yellow', 'red', 'brown','green','blue']});



// Export.image.toDrive({
//   image: classified,
//   description: 'marathon-2010-5',
//   scale: 1,
// });


// Export.image.toDrive({
//   image: classified,
//   description: 'milwaukee-2010-fullcounty',
//   scale: 1,
//   maxPixels: 12000000000,
//   crs: 'EPSG:3070'
// });


// Export.image.toAsset({
//   image: classified,
//   description: 'milwaukeeClassified2010',
//   assetId: 'milwaukeeClassified2010',
//   scale: 1,
//   region: marathonExport,
//   pyramidingPolicy: {
//     'classification': 'mode'
//   }
// });