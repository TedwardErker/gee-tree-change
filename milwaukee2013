/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var grass = /* color: #eaed21 */ee.Feature(
        ee.Geometry.MultiPoint(),
        {
          "class_2013": 0,
          "system:index": "0"
        }),
    impervious = /* color: #ff1429 */ee.Feature(
        ee.Geometry.MultiPoint(),
        {
          "class_2013": 1,
          "system:index": "0"
        }),
    soil = /* color: #c2a042 */ee.Feature(
        ee.Geometry.MultiPoint(),
        {
          "class_2013": 2,
          "system:index": "0"
        }),
    tree = /* color: #20c82d */ee.Feature(
        ee.Geometry.MultiPoint(),
        {
          "class_2013": 3,
          "system:index": "0"
        }),
    water = /* color: #0826ff */ee.Feature(
        ee.Geometry.MultiPoint(
            [[-87.8741613967516, 43.02521161522631],
             [-87.88755098415395, 43.01253544745892],
             [-87.88102785182973, 43.01065262509818],
             [-87.88789430690785, 43.031360496402655],
             [-87.89115587306996, 43.024709638548856],
             [-87.87244478298207, 43.007012338199054],
             [-87.88111854395933, 43.01358125950304],
             [-87.87759948573179, 43.01693875895218],
             [-87.87476707301207, 43.017032891805236],
             [-87.89356399378843, 43.01643671463222],
             [-87.90090251765318, 43.013895052274556],
             [-87.903391607619, 43.014522633007516],
             [-87.90420699915953, 43.020013690848046],
             [-87.89055991969175, 43.01681324825701],
             [-87.8909461577899, 43.02039020253878],
             [-87.88528133235044, 43.01963717684848],
             [-87.88631130061216, 43.017723194984896],
             [-87.89120364985533, 43.015652262165055],
             [-87.8929631789691, 43.01464814838451],
             [-87.89013076624937, 43.01147880657568],
             [-87.89146114192076, 43.009031084140666],
             [-87.89081741175718, 43.00793271544469],
             [-87.88738418421812, 43.00840344729082],
             [-87.88824249110289, 43.010474624556736],
             [-87.88382221064634, 43.010129433195814],
             [-87.88476634821959, 43.00777580402766],
             [-87.88034606776304, 43.007744421696145],
             [-87.88515258631773, 43.00975285858949],
             [-87.88571048579283, 43.01511882876343],
             [-87.88832832179136, 43.015620883857935],
             [-87.88944412074156, 43.01982543413685],
             [-87.89395023188658, 43.020735336227],
             [-87.893306501723, 43.0231825921812],
             [-87.8892724593646, 43.02359045868957],
             [-87.87978816828794, 43.021268720838236],
             [-87.88060355982847, 43.01722115707839],
             [-87.90369201502867, 43.02324534105116],
             [-87.90480781397886, 43.02233547615941],
             [-87.87802863917418, 43.008905557283754],
             [-87.88918662867613, 43.02904933417622],
             [-87.89193321070738, 43.03337844196712],
             [-87.88807082972593, 43.03475867300385],
             [-87.89450813136168, 43.03927557571961],
             [-87.893306501723, 43.04140844198139],
             [-87.88558173976011, 43.04134571167903],
             [-87.88849998316832, 43.03902464540256],
             [-87.88200369335453, 43.00096548918124],
             [-87.87814131237309, 42.99889399128569],
             [-87.87788382030766, 43.00240921914084],
             [-87.87316313244145, 43.00077717407666],
             [-87.87582388378422, 42.9968224235508],
             [-87.87719717479985, 42.99343243479493],
             [-87.87342062450688, 42.99142346432524],
             [-87.87178984142582, 42.98947721155932],
             [-87.86801329113285, 42.98891215889028],
             [-87.86732664562504, 42.98677746859494],
             [-87.86440840221684, 42.98627517775163],
             [-87.87067404247563, 42.994123003227],
             [-87.86406507946293, 42.995943555533756],
             [-87.85316458202641, 42.99355799326885],
             [-87.86809912182133, 43.00090271754385],
             [-87.86861410595219, 42.997324628202705],
             [-87.88292637325566, 43.002934916732876],
             [-87.8812955901746, 43.002220908461375],
             [-87.88051238514225, 43.000785020550886],
             [-87.87603846050541, 43.00122442150759],
             [-87.87903180576603, 43.00168735840177],
             [-87.87880650020878, 43.00061239788668],
             [-87.88519015766423, 43.00054177938429],
             [-87.8858875320081, 43.00284076227095],
             [-87.87634959675114, 43.002777992549504],
             [-87.87391415096562, 43.00232291015106],
             [-87.87420382953923, 43.001075339392365],
             [-87.8745042369489, 43.002291525033804],
             [-87.8748475597028, 43.00288783951994],
             [-87.87875285602848, 43.004009836612184],
             [-87.87235846973698, 43.00181290000913],
             [-87.87079205967228, 43.00308399433579],
             [-87.87274470783512, 43.00355476333858],
             [-87.87552347637455, 43.00363322448832]]),
        {
          "class_2013": 4,
          "system:index": "0"
        });
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var milwaukeeExport = ee.Geometry.Polygon(
        [[[-88.35575750089527, 43.35209206347098],
          [-88.35575750089527, 42.80743795582355],
          [-87.76249578214527, 42.80743795582355],
          [-87.76249578214527, 43.35209206347098]]], null, false),
    wb = ee.Image("users/erker/milwaukee/milwaukee_water/mke_water_bodies_26916_input"),
    wl = ee.Image("users/erker/milwaukee/milwaukee_water/mke_water_lines_26916_input");


var pts = ee.FeatureCollection('users/erker/milwaukee/milwaukee_shapefiles/milwaukee_accuracy_training');

var classProperty = 'class_2013';

var pts = pts.remap(['G','I','S','T','W'], [0,1,2,3,4], classProperty);


var testpts = ee.FeatureCollection('users/erker/milwaukee/milwaukee_shapefiles/milwaukee_accuracy_testing').filter(ee.Filter.neq(classProperty, '')).remap(['G','I','S','T','W'], [0,1,2,3,4], classProperty);
// var testpts = testpts.randomColumn();
// testpts =  testpts.filter(ee.Filter.lt('random', 0.2));
// print(testpts.size());



var buf3000 = function(feature) {return feature.buffer(3000)};
var urbanregion = testpts.map(buf3000);
var naip = ee.ImageCollection('USDA/NAIP/DOQQ').filterBounds(urbanregion); 
var naip13c = naip.filterDate('2013-01-01', '2013-12-31');
var naip15c = naip.filterDate('2015-01-01', '2015-12-31');



var naip13 = naip13c.median().byte();
var naip15 = naip15c.median().byte();


var ndvi13 = naip13.normalizedDifference(['N', 'R']);
var gauss53 = ee.Kernel.gaussian({radius: 5, sigma: 3, units: 'pixels', normalize:true});
var naip13Gauss53 = naip13.convolve(gauss53);

var gauss104 = ee.Kernel.gaussian({radius: 10, sigma: 4, units: 'pixels', normalize:true});
var naip13Gauss104 = naip13.convolve(gauss104);

var win10 = ee.Kernel.square({radius: 10});
var entro10 = naip13.select('N').entropy(win10);

var win5 = ee.Kernel.square({radius: 5});
var entro5 = naip13.select('N').entropy(win5);

var nir13glcm3 = naip13.select(['N']).glcmTexture({size: 3, average: false});
var contrast3 = nir13glcm3.select('N_contrast_-1_-1', 'N_contrast_0_-1', 'N_contrast_1_-1', 'N_contrast_-1_0');
var nir13glcm7 = naip13.select(['N']).glcmTexture({size: 7, average: false});
var contrast7 = nir13glcm7.select('N_contrast_-1_-1', 'N_contrast_0_-1', 'N_contrast_1_-1', 'N_contrast_-1_0');
var nir13glcm14 = naip13.select(['N']).glcmTexture({size: 14, average: false});
var contrast14 = nir13glcm14.select('N_contrast_-1_-1', 'N_contrast_0_-1', 'N_contrast_1_-1', 'N_contrast_-1_0');

// var image = ee.Image.cat([naip13, ndvi13, naip13Gauss53, entro10, entro5, contrast7, contrast14, wl, wb]);
// var image = naip13;
var image = ee.Image.cat([naip13, naip15, wl, wb, contrast3]);
print(image);

// var training = image.sampleRegions({
//   collection: trainingData,
//   properties: [classProperty],
//   scale: 1
// });


// var trainingGrass = image.sampleRegions({collection: grass, properties: [classProperty], scale: 1}).randomColumn().filter(ee.Filter.lt('random', 1));
// var trainingImpervious = image.sampleRegions({collection: impervious, properties: [classProperty], scale: 1}).randomColumn().filter(ee.Filter.lt('random', 1));
// var trainingSoil = image.sampleRegions({collection: soil, properties: [classProperty], scale: 1}).randomColumn().filter(ee.Filter.lt('random', 1));
// var trainingTree = image.sampleRegions({collection: tree, properties: [classProperty], scale: 1}).randomColumn().filter(ee.Filter.lt('random', 1));
// var trainingWater = image.sampleRegions({collection: water, properties: [classProperty], scale: 1}).randomColumn().filter(ee.Filter.lt('random', 1));
var trainingPts = image.sampleRegions({collection: pts, properties: [classProperty], scale: 1}); //.randomColumn().filter(ee.Filter.lt('random', 0.));

// var training = trainingPts.merge(trainingGrass).merge(trainingTree).merge(trainingSoil).merge(trainingImpervious).merge(trainingWater);
var training = trainingPts
print(training.size());


var trainedClassifier = ee.Classifier.smileRandomForest(100).train({
  features: training,
  classProperty: classProperty,
  inputProperties: image.bandNames()
});

print(trainedClassifier);

var testing = image.sampleRegions({collection: testpts, properties: [classProperty], scale: 1});

var testClassified = testing.classify(trainedClassifier);
var testAccuracy = testClassified.errorMatrix(classProperty, 'classification');
print('testing error matrix: ', testAccuracy);
print('testing overall accuracy: ', testAccuracy.accuracy());


var classified = image.classify(trainedClassifier);

Map.addLayer(naip15);
Map.addLayer(naip13);
Map.addLayer(classified, {min: 0, max: 4, palette: ['yellow', 'red', 'brown','green','blue']});

//Map.addLayer(errors);

// // Export.image.toDrive({
// //   image: classified,
// //   description: 'marathon-2010-5',
// //   scale: 1,
// // });


// // Export.image.toDrive({
// //   image: classified,
// //   description: 'milwaukee-2010-fullcounty',
// //   scale: 1,
// //   maxPixels: 12000000000,
// //   crs: 'EPSG:3070'
// // });


// // Export.image.toAsset({
// //   image: classified,
// //   description: 'milwaukeeClassified2010',
// //   assetId: 'milwaukeeClassified2010',
// //   scale: 1,
// //   region: marathonExport,
// //   pyramidingPolicy: {
// //     'classification': 'mode'
// //   }
// // });