/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = /* color: #d63000 */ee.Geometry.MultiPoint();
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var milwaukeeExport = ee.Geometry.Polygon(
        [[[-88.35575750089527, 43.35209206347098],
          [-88.35575750089527, 42.80743795582355],
          [-87.76249578214527, 42.80743795582355],
          [-87.76249578214527, 43.35209206347098]]], null, false);

var mke2010 = ee.Image("users/erkere/milwaukeeClassified2010"),
    mke2013 = ee.Image("users/erkere/milwaukeeClassified2013"),
    mke2017 = ee.Image("users/erkere/milwaukeeClassified2017-old");
    
      
  
var naip = ee.ImageCollection('USDA/NAIP/DOQQ').filterBounds(milwaukeeExport);
var naip05 = naip.filterDate('2005-01-01', '2005-12-31').median().byte();
var naip08 = naip.filterDate('2008-01-01', '2008-12-31').median().byte();
var naip10 = naip.filterDate('2010-01-01', '2010-12-31').median().byte();
var naip13 = naip.filterDate('2013-01-01', '2013-12-31').median().byte();
var naip15 = naip.filterDate('2015-01-01', '2015-12-31').median().byte();
var naip17 = naip.filterDate('2017-01-01', '2017-12-31').median().byte();
var naip18 = naip.filterDate('2018-01-01', '2018-12-31').median().byte();


    
// convert to tree
var mke2010tree = mke2010.eq(3).select(['classification'], ['tree2010']);
var mke2013tree = mke2013.eq(3).select(['classification'], ['tree2013']);
var mke2017tree = mke2017.eq(3).select(['classification'], ['tree2017']);



//
//      Pixel level change
//


//                       2013 to 2017
var treeConstant = mke2013tree.eq(1).and(mke2017tree.eq(1)).select(['tree2013'], ['treeChangeCode']).expression("b('treeChangeCode') * 4");
print(treeConstant);
var treeGain = mke2013tree.eq(0).and(mke2017tree.eq(1)).select(['tree2013'], ['treeChangeCode']).expression("b('treeChangeCode') * 3");
var treeLoss = mke2013tree.eq(1).and(mke2017tree.eq(0)).select(['tree2013'], ['treeChangeCode']).expression("b('treeChangeCode') * 2");
var noTreeConstant = mke2013tree.eq(0).and(mke2017tree.eq(0)).select(['tree2013'], ['treeChangeCode']);
var mke2013to2017 = ee.ImageCollection([treeConstant, treeLoss, treeGain, noTreeConstant]).sum();

//                       2010 to 2017
var treeConstant = mke2010tree.eq(1).and(mke2017tree.eq(1)).select(['tree2010'], ['treeChangeCode']).expression("b('treeChangeCode') * 4");
print(treeConstant);
var treeGain = mke2010tree.eq(0).and(mke2017tree.eq(1)).select(['tree2010'], ['treeChangeCode']).expression("b('treeChangeCode') * 3");
var treeLoss = mke2010tree.eq(1).and(mke2017tree.eq(0)).select(['tree2010'], ['treeChangeCode']).expression("b('treeChangeCode') * 2");
var noTreeConstant = mke2010tree.eq(0).and(mke2017tree.eq(0)).select(['tree2010'], ['treeChangeCode']);
var mke2010to2017 = ee.ImageCollection([treeConstant, treeLoss, treeGain, noTreeConstant]).sum();


Map.addLayer(naip10);
Map.addLayer(naip13);
Map.addLayer(naip17);
Map.addLayer(mke2010to2017, {min: 1, max: 4, palette: ['black', 'red', 'green','white']});
Map.addLayer(mke2013to2017, {min: 1, max: 4, palette: ['black', 'red', 'green','white']});




//
//                9x9 change
//

var k9x9 = ee.Kernel.rectangle(4.5, 4.5, 'pixels', true);
print(k9x9);

//                       2013 to 2017
var mke2013tree9x9 = mke2013tree.convolve(k9x9);
var mke2017tree9x9 = mke2017tree.convolve(k9x9);
var mke2013to2017_9x9 = mke2017tree9x9.subtract(mke2013tree9x9);
Map.addLayer(mke2013to2017_9x9, {min: -1, max: 1, palette: ['#e80c1e', '#ffffff','#04db33']});


//                       2010 to 2017
var mke2010tree9x9 = mke2010tree.convolve(k9x9);
var mke2017tree9x9 = mke2017tree.convolve(k9x9);
var mke2010to2017_9x9 = mke2017tree9x9.subtract(mke2010tree9x9);
Map.addLayer(mke2010to2017_9x9, {min: -1, max: 1, palette: ['#e80c1e', '#ffffff','#04db33']});

//
//               25x25 change
// 

var k25x25 = ee.Kernel.rectangle(12.5, 12.5, 'pixels', true);
print(k25x25);

//                       2013 to 2017
var mke2013tree25x25 = mke2013tree.convolve(k25x25);
var mke2017tree25x25 = mke2017tree.convolve(k25x25);
var mke2013to2017_25x25 = mke2017tree25x25.subtract(mke2013tree25x25);
Map.addLayer(mke2013to2017_25x25, {min: -1, max: 1, palette: ['#e80c1e', '#ffffff','#04db33']});


//                       2010 to 2017
var mke2010tree25x25 = mke2010tree.convolve(k25x25);
var mke2017tree25x25 = mke2017tree.convolve(k25x25);
var mke2010to2017_25x25 = mke2017tree25x25.subtract(mke2010tree25x25);
Map.addLayer(mke2010to2017_25x25, {min: -1, max: 1, palette: ['#e80c1e', '#ffffff','#04db33']});


//
//               50x50 change
// 

var k50x50 = ee.Kernel.rectangle(25, 25, 'pixels', true);
print(k50x50);

//                       2013 to 2017
var mke2013tree50x50 = mke2013tree.convolve(k50x50);
var mke2017tree50x50 = mke2017tree.convolve(k50x50);
var mke2013to2017_50x50 = mke2017tree50x50.subtract(mke2013tree50x50);
Map.addLayer(mke2013to2017_50x50, {min: -1, max: 1, palette: ['#e80c1e', '#ffffff','#04db33']});


//                       2010 to 2017
var mke2010tree50x50 = mke2010tree.convolve(k50x50);
var mke2017tree50x50 = mke2017tree.convolve(k50x50);
var mke2010to2017_50x50 = mke2017tree50x50.subtract(mke2010tree50x50);
Map.addLayer(mke2010to2017_50x50, {min: -1, max: 1, palette: ['#e80c1e', '#ffffff','#04db33']});


// Export:  Make sure I clip out the bad parts from lack of lidar.

// mke2010 to 2017 make



