/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var grass = /* color: #dde026 */ee.Feature(
        ee.Geometry.MultiPoint(),
        {
          "class_2017": 0,
          "system:index": "0"
        }),
    impervious = /* color: #ff0000 */ee.Feature(
        ee.Geometry.MultiPoint(),
        {
          "class_2017": 1,
          "system:index": "0"
        }),
    soil = /* color: #c2ab6a */ee.Feature(
        ee.Geometry.MultiPoint(),
        {
          "class_2017": 2,
          "system:index": "0"
        }),
    tree = /* color: #34c058 */ee.Feature(
        ee.Geometry.MultiPoint(),
        {
          "class_2017": 3,
          "system:index": "0"
        }),
    water = /* color: #2523be */ee.Feature(
        ee.Geometry.MultiPoint(),
        {
          "class_2017": 4,
          "system:index": "0"
        });
/***** End of imports. If edited, may not auto-convert in the playground. *****/


var wb = ee.Image('users/erker/UTC/marathon_water/water_bodies');
var wl = ee.Image('users/erker/UTC/marathon_water/water_lines');

var classProperty = 'class_2017';

var pts = ee.FeatureCollection('users/erkere/marathonShapefiles/marathon_accuracy_training').remap(['G','I','S','T','W'], [0,1,2,3,4], classProperty);

var buf3000 = function(feature) {return feature.buffer(3000)};
var urbanregion = pts.map(buf3000);
var naip = ee.ImageCollection('USDA/NAIP/DOQQ').filterBounds(urbanregion);  
var naip17c = naip.filterDate('2017-01-01', '2017-12-31');
var naip18c = naip.filterDate('2018-01-01', '2018-12-31');


var pts = pts.merge(grass).merge(tree).merge(soil).merge(impervious).merge(water);

var naip17 = naip17c.median().byte();
var naip18 = naip18c.median().byte();



var ndvi = naip17.normalizedDifference(['N', 'R']);
var gauss53 = ee.Kernel.gaussian({radius: 5, sigma: 3, units: 'pixels', normalize:true});
var naip17Gauss53 = naip17.convolve(gauss53);
var naip18Gauss53 = naip18.convolve(gauss53);
var gauss104 = ee.Kernel.gaussian({radius: 10, sigma: 4, units: 'pixels', normalize:true});
var naip17Gauss104 = naip17.convolve(gauss104);
var naip18Gauss104 = naip18.convolve(gauss104);
var win10 = ee.Kernel.square({radius: 10});
var entro10 = naip17.select('N').entropy(win10);
var win5 = ee.Kernel.square({radius: 5});
var entro5 = naip17.select('N').entropy(win5);
var nir17glcm3 = naip17.select(['N']).glcmTexture({size: 3, average: false});
var contrast3 = nir17glcm3.select('N_contrast_-1_-1', 'N_contrast_0_-1', 'N_contrast_1_-1', 'N_contrast_-1_0');
var nir17glcm7 = naip17.select(['N']).glcmTexture({size: 7, average: false});
var contrast7 = nir17glcm7.select('N_contrast_-1_-1', 'N_contrast_0_-1', 'N_contrast_1_-1', 'N_contrast_-1_0');

var image = ee.Image.cat([naip17, naip18, ndvi, naip17Gauss53, naip17Gauss104, naip18Gauss104, entro10, entro5, contrast3, contrast7, wb, wl]);

var image = ee.Image.cat([naip17, naip18, naip17Gauss53, entro5, contrast3, wb, wl]);


var training = image.sampleRegions({
  collection: pts,
  properties: [classProperty],
  scale: 1
});
print(training.size());

var trainedClassifier = ee.Classifier.smileRandomForest(10).train({
  features: training,
  classProperty: classProperty,
  inputProperties: image.bandNames()
});

// print(trainedClassifier);

var testpts = ee.FeatureCollection('users/erkere/marathonShapefiles/marathon_accuracy_testing').remap(['G','I','S','T','W'], [0,1,2,3,4], classProperty);
var testing = image.sampleRegions({collection: testpts, properties: [classProperty], scale: 1});
var testingClassified = testing.classify(trainedClassifier);
var testAccuracy = testingClassified.errorMatrix('class_2017', 'classification');
print('Testing error matrix: ', testAccuracy);
print('Testing overall accuracy: ', testAccuracy.accuracy());

// var validation = image.sampleRegions({collection: testpts, properties: [classProperty], scale: 1});
// var validationClassified = validation.classify(trainedClassifier);
// var validationAccuracy = validationClassified.errorMatrix('class_2017', 'classification');
// print('Validation error matrix: ', validationAccuracy);
// print('Validation overall accuracy: ', validationAccuracy.accuracy());


var classified = image.classify(trainedClassifier);




// Map.centerObject(pts, 24);
Map.addLayer(naip17);
//Map.addLayer(naip18);
Map.addLayer(classified, {min: 0, max: 4, palette: ['yellow', 'red', 'brown','green','blue']});





// Export.image.toDrive({
//   image: classified,
//   description: 'marathon2017-fullcounty',
//   scale: 1,
//   maxPixels: 12000000000,
//   region: marathonExport,
//   crs: 'EPSG:3070',
// });


// Export.image.toAsset({
//   image: classified,
//   description: 'marathonClassified2017',
//   assetId: 'marathonClassified2017',
//   scale: 1,
//   maxPixels: 12000000000,
//   region: marathonExport,
//   pyramidingPolicy: {
//     'classification': 'mode'
//   }
// });