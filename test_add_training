/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var grass = /* color: #ffc82d */ee.Geometry.MultiPoint(
        [[-90.32665744138231, 45.00996221422387],
         [-90.32710805249681, 45.00985222997199],
         [-90.3272689850377, 45.009089919524705]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var pts = ee.FeatureCollection('users/erker/UTC/marathon_combined_sub_1k');
var pts = pts.remap([1,2,3,4,5], [0,1,2,3,4], 'class_2017');

var grass = ee.Feature(grass).set('class_2017', 0);


var pts2 = pts.merge(grass);
print(pts2);

var naip = ee.ImageCollection('USDA/NAIP/DOQQ').filterBounds(pts);
var naip17c = naip.filterDate('2017-01-01', '2017-12-31');
var naip17 = naip17c.median().byte()


var image = ee.Image.cat([naip17]); //gradient, direction]); 


var classProperty = 'class_2017';

var training = image.sampleRegions({
  collection: pts2,
  properties: [classProperty],
  scale: 1
});
// print(training);

var trainedClassifier = ee.Classifier.smileRandomForest(100).train({
  features: training,
  classProperty: classProperty,
  inputProperties: image.bandNames()
});

// print(trainedClassifier);


var classified = image.classify(trainedClassifier);
// Map.addLayer(naip17);
Map.addLayer(classified, {min: 0, max: 4, palette: ['yellow', 'red', 'brown','green','blue']});




